Upstream status: Adapted from upstream.

From d3d968e5835f449d7ea715f45160db81ea906303 Mon Sep 17 00:00:00 2001
From: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date: Tue, 16 Aug 2022 20:29:54 +0200
Subject: [PATCH] Fix build on GNU/Hurd

There is no path length limitation there, even via pathconf.  But glibc
provides a getcwd function that allocates the buffer dynamically so we can
just leverage that.
---
 include/ghc/filesystem.hpp | 7 +++++++
 1 file changed, 7 insertions(+)

--- a/filesystem/filesystem.hpp.orig	2022-08-11 22:14:32.000000000 +0200
+++ b/filesystem/filesystem.hpp	2023-06-13 07:26:25.310000000 +0200
@@ -4081,6 +4081,13 @@
         return path();
     }
     return path(std::wstring(buffer.get()), path::native_format);
+#elif defined(__GLIBC__)
+    std::unique_ptr<char, decltype(&std::free)> buffer { ::getcwd(NULL, 0), std::free };
+    if (buffer == nullptr) {
+        ec = detail::make_system_error();
+        return path();
+    }
+    return path(buffer.get());
 #else
     size_t pathlen = static_cast<size_t>(std::max(int(::pathconf(".", _PC_PATH_MAX)), int(PATH_MAX)));
     std::unique_ptr<char[]> buffer(new char[pathlen + 1]);
